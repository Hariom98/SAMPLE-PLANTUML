@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2
!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0

!include DEVICONS/angular.puml
!include DEVICONS/mysql.puml
!include FONTAWESOME/users.puml
!include FONTAWESOME/user.puml
!include DEVICONS2/typescript.puml
!includeurl ICONURL/common.puml
!includeurl ICONURL/devicons2/angularjs.puml
!includeurl ICONURL/devicons2/csharp.puml
!includeurl ICONURL/devicons2/mysql.puml

skinparam defaultTextAlignment center

Person(users, "User", "Authorized Users", $sprite="users")
Container(spa, "SPA", "angular", "The main interface that the customer interacts with", $sprite="angularjs")

System_Boundary(api, "API Application") {
  
 System_Boundary(invoiceApi, "Invoice API Application") {
  Container(client, "Client Controller", "ASP.NET,C#", "Function: CRUD operations on Client data")
  Container(invoice, "Invoice Controller", "ASP.NET,C#", "Function: CRUD operations on Invoice data")
  Container(invoiceTemplate, "Invoice Component", "C#", "Create Invoice template with data")
 }

 System_Boundary(usermgmtAPI, "UserManagement") {
  Container(login, "Log In Controller", "ASP.NET,C#", "Function: Login, Logout, Reset Password")
   Container(admin, "Admin Controller", "ASP.NET,C#", "Function: CRUD operations on User data")
   Container(employee, "Employee Controller", "ASP.NET,C#", "Function: CRUD operations on Employee & Payroll data") 
   }
 
 System_Boundary(sharedComponent, "Shared Component") {
  Container(email, "Email Component", "C#", "Create Email body and send to ToEmail Address")
  Container(efCore, "Objectâ€“Relational Mapping framework", "EF Core,C#", "Create connection & transfer Data b/w API and Database")
  Container(storage, "S3 bucket Component", "C#", "Read/Write files into S3 bucket.")
 }
}
ContainerDb(database, "Database", "MySQL", "Stores User, Invoice, Client, Employee & Payroll data", $sprite="mysql")
Rel_D(users,spa,"Uses")
Rel_D(spa,usermgmtAPI,"Uses")
Rel_R(api,database,"Uses")

SHOW_LEGEND(true)
@enduml